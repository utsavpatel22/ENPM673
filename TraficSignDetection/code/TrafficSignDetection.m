clear all;
clc;
load('SVM.mat')
NewVid = VideoWriter('E:\Sem 1\ENPM 673\project4\upatel22_proj4\P4_Submission\output\trafficsigndetectionvideo');
NewVid.FrameRate = 30;
open(NewVid);
    


testfolder = 'E:\Sem 1\ENPM 673\project4\upatel22_proj4\P4_Submission\TSR\input\';
for i= 2828:2828
    i
 testfilename = sprintf('image.03%d.jpg',i);
 fulltestfilenamecolor = strcat(testfolder, testfilename);
 if exist(fulltestfilenamecolor, 'file') ~= 0
 img = imread(fulltestfilenamecolor);
 %Applying the gaussian filter
    mu = 5;
    sigma = 2;
    index = -floor(mu/2) : floor(mu/2);
    [X Y] = meshgrid(index, index);
    H = exp(-(X.^2 + Y.^2) / (2*sigma*sigma));
    H = H / sum(H(:));
    Im = imfilter(img, H);
   
    %% Normalizing the contrast
    Im = imadjust(Im,stretchlim(Im),[]);
     
    
    %% Red and blue normalization
    RChannel = Im(:,:,1);
    GChannel = Im(:,:,2);
    BChannel = Im(:,:,3);

    red = uint8(max(0, min(RChannel-BChannel, RChannel-GChannel)));
    blue = uint8(max(0, min(BChannel-RChannel, BChannel-GChannel)));

    bb = im2bw(blue,.15);
    br = im2bw(red,.15);

    randb = red + blue;

    %Masking the image
    x = [1 1628 1628 1];
    y = [1 1 618 618];
    mask = poly2mask(x,y, 1236, 1628);
    maskedIm = uint8(immultiply(randb,mask));
   
   

    
    %Applying MSER
    
    [r,f] = vl_mser(maskedIm,'MinDiversity',0.7,...
                    'MaxVariation',0.2,...
                    'Delta',8);

    M = zeros(size(maskedIm));
    for x=r'
     s = vl_erfill(maskedIm,x);
     M(s) = M(s) + 1;
    end
     
    
    threshold = graythresh(M);
    M = im2bw(M, threshold);
    se = strel('octagon',6);
    M = imdilate(M, se);


    % Applying Area filter
    M = bwareafilt(M, [950 10000]);


    regions = regionprops( M, 'BoundingBox');

    %Generating bounding boxes for the blobs generated by MSER
    figure(3) ;
    clf; imagesc(Im) ; hold on ; axis equal off; colormap gray ;    
    


 for k = 1 : length(regions)
      rect = regions(k).BoundingBox;
      AR = rect(3)/rect(4);
      if AR < 1.1 && AR > 0.6    %Aspect Ration of detections
%            rectangle('Position', box,'EdgeColor','r','LineWidth',1.5 )
           
          test = imcrop(img, rect);  
          test = im2single(imresize(test,[64 64]));
          %figure, imshow(sign)

          % CLASSIFICATION
          %Get HOG Features of detections 
          hog = [];
          hog_det = vl_hog(test, 4);
          [hog_1, hog_2] = size(hog_det);
          dim = hog_1 * hog_2;
          hog_det_trans = permute(hog_det, [2 1 3]);
          hog_det=reshape(hog_det_trans,[1 dim]); 
          hog = hog_det;
          
          [predictedLabels, score] = predict(classifier, hog);
          label = str2num(predictedLabels);

          for j = 1:length(score)
              if (score(j) > -0.04)
                rectangle('Position', rect,'EdgeColor','g','LineWidth',2 )

                samplefolder = 'E:\Sem 1\ENPM 673\project4\upatel22_proj4\P4_Submission\TSR\Sample\';
                if (label == 1)
                    samplefilename = sprintf('0000%d.jpg',label);
                
              else
                samplefilename = sprintf('000%2d.jpg',label);
                end
               fullfilenamecolor = strcat(samplefolder, samplefilename);

                im=imread(fullfilenamecolor);
                im = im2single(imresize(im,[rect(4) rect(3)]));
                image([int64(rect(1)-rect(3)) int64(rect(1)-rect(3)) ],[int64(rect(2)) int64(rect(2))],im);
                 
              end
          end

      end    
 end

 end
  frame = getframe(gca);
    writeVideo(NewVid,frame);
end
 
    
    
    close(NewVid);



   